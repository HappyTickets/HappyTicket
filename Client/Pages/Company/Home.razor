@page "/"
@inject ICustomSnackbarProvider Snackbar
@inject IStringLocalizer<Resource> Localizer
@inject BIMatchService MatchService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime


<LanguageTrackProvider OnInitializeEvent="provider => provider.RegisterComponent(this)" />
<PageTitle>@Resource.CompanyName</PageTitle>

<!--Home banner-->
<section class="mb-5">
    <MudCarousel Class="mud-width-75 mx-auto rounded-xl overflow-hidden" Style="height:500px;" ShowArrows="true" ShowBullets="true" EnableSwipeGesture="true" AutoCycle="true" TData="object">
        <BulletTemplate Context="selected">
            <div Class="mud-button-root mud-icon-button mud-ripple mud-ripple-icon">
                <span class="mud-icon-button-label">
                    <MudIcon Class="mud-ripple mud-ripple-icon mud-icon-button-size-medium" Icon="@(selected ? Icons.Material.Filled.Circle : Icons.Material.Outlined.Circle)" />
                </span>
            </div>
        </BulletTemplate>
        <PreviousButtonTemplate>
            <div Class="mud-button-root mud-icon-button mud-ripple mud-ripple-icon">
                <span class="mud-icon-button-label">
                    <MudIcon Class="mud-ripple mud-ripple-icon mud-icon-button-size-medium" Icon="@Icons.Material.Rounded.ArrowBackIos" />
                </span>
            </div>
        </PreviousButtonTemplate>
        <NextButtonTemplate>
            <div Class="mud-button-root mud-icon-button mud-ripple mud-ripple-icon">
                <span class="mud-icon-button-label">
                    <MudIcon Class="mud-ripple mud-ripple-icon mud-icon-button-size-medium" Icon="@Icons.Material.Rounded.ArrowForwardIos" />
                </span>
            </div>
        </NextButtonTemplate>

        <ChildContent>
            <MudCarouselItem Transition="Transition.Fade" Color="@Color.Primary">
                <div class="position-relative d-flex w-100" style="height:100%;">
                    <MudImage Src="Imgs/1.jpg" Class="mx-auto my-auto" Style="width:100%; height:100%; object-fit:cover;" />
                    <div class="overlay position-absolute w-100 h-100" style="background-color: rgba(59, 86, 117, 0.6);"></div>
                    <div class="text-overlay position-absolute text-white text-center w-100" style="top:50%; transform:translateY(-50%);">
                        <h3>@Resource.slide1</h3>
                    </div>
                </div>
            </MudCarouselItem>
            <MudCarouselItem Transition="Transition.Fade" Color="@Color.Primary">
                <div class="position-relative d-flex w-100" style="height:100%;">
                    <MudImage Src="Imgs/2.jpg" Class="mx-auto my-auto" Style="width:100%; height:100%; object-fit:cover;" />
                    <div class="overlay position-absolute w-100 h-100" style="background-color: rgba(59, 86, 117, 0.6);"></div>
                    <div class="text-overlay position-absolute text-white text-center w-100" style="top:50%; transform:translateY(-50%);">
                        <h3>Your Text Here</h3>
                    </div>
                </div>
            </MudCarouselItem>
            <MudCarouselItem Transition="Transition.Fade" Color="@Color.Primary">
                <div class="position-relative d-flex w-100" style="height:100%;">
                    <MudImage Src="Imgs/3.jpg" Class="mx-auto my-auto" Style="width:100%; height:100%; object-fit:cover;" />
                    <div class="overlay position-absolute w-100 h-100" style="background-color: rgba(59, 86, 117, 0.6);"></div>
                    <div class="text-overlay position-absolute text-white text-center w-100" style="top:50%; transform:translateY(-50%);">
                        <h3>Your Text Here</h3>
                    </div>
                </div>
            </MudCarouselItem>
        </ChildContent>
    </MudCarousel>
</section>

<!--About Us-->

<MudContainer Class="d-flex flex-column justify-center mt-6">
    <MudGrid>
        <MudItem xs="12" md="5">
            <MudText Typo="Typo.caption" Class="mb-2" Color="Color.Primary">
                @Resource.GetToKnowUs
            </MudText>
            <MudText Typo="Typo.h3" Class="font-weight-bold pt-3">@Resource.GetToKnowUs @Resource.CompanyName</MudText>
            <MudText Typo="Typo.body1" Class=" company-description pt-3">
                @(new MarkupString(Resource.HomeAboutUs))

            </MudText>
        </MudItem>
        <MudItem md="2"></MudItem>
        <MudItem xs="12" md="5" Class="d-flex align-items-center">
            <MudImage Src="logos/logo.svg" Alt="Office Meeting" Width="300" Style="border-radius: 8px;" />
        </MudItem>
    </MudGrid>

   
</MudContainer>



<!--Events-->
<div class="event-section pt-5 mt-5">
    <div class="section-header">
        <h2 class="section-title">المباريات القادمة</h2>
        <a href="#" class="view-all-link">عرض الكل</a>
    </div>

    <div class="events-container">
        <!-- Event Card 1 -->
        <div class="event-card">
            <div class="event-image-container">
                <img src="Imgs/compitation.jpeg" alt="Match 1">
                <img src="Imgs/compitation.jpeg" class="corner-logo" alt="Logo">
            </div>
            <div class="event-details">
                <h3>ملعب الامير محمد بن فهد</h3>
                <p>1 / 8 / 2024</p>
                <a href="#" class="event-button">اضغط هنا</a>
            </div>
        </div>

        <!-- Event Card 2 -->
        <div class="event-card">
            <div class="event-image-container">
                <img src="Imgs/compitation.jpeg" class="corner-logo" alt="Logo">
            </div>
            <div class="event-details">
                <h3>ملعب جامعة الملك سعود</h3>
                <p>1 / 8 / 2024</p>
                <a href="#" class="event-button">اضغط هنا</a>
            </div>
        </div>

        <!-- Event Card 3 -->
        <div class="event-card">
            <div class="event-image-container">
                <img src="Imgs/compitation.jpeg" class="corner-logo" alt="Logo">
            </div>
            <div class="event-details">
                <h3>ملعب الأمير عبد العزيز بن مساعد</h3>
                <p>1 / 8 / 2024</p>
                <a href="#" class="event-button">اضغط هنا</a>
            </div>
        </div>

        <!-- Event Card 4 -->
        <div class="event-card">
            <div class="event-image-container">
                <img src="Imgs/compitation.jpeg" class="corner-logo" alt="Logo">
            </div>
            <div class="event-details">
                <h3>ملعب مدينة الملك فهد الرياضية</h3>
                <p>1 / 8 / 2024</p>
                <a href="#" class="event-button">اضغط هنا</a>
            </div>
        </div>
    </div>
</div>



<!---Statistics Section-->
<section class="stats-section">
    <h1>دع الارقام تتكلم</h1>
    <p>أكبر شبكة حجز تذاكر في المملكة</p>

    <div class="stats-container">
        <div class="stat-box">
          
            <MudIcon Icon="@Icons.Outlined.PersonOutline" Color="Color.Secondary" Size="Size.Large"/>

            <h2 class="count mt-3" data-target="2000">0</h2>
            <p>عميل يثق ينا</p>
        </div>

        <div class="stat-box">
            <MudIcon Icon="@Icons.Material.Outlined.WhereToVote" Color="Color.Secondary" Size="Size.Large" />

            <h2 class="count mt-3" data-target="8000">0</h2>
            <p>الفعاليات التي تم تنظيمها</p>
        </div>

        <div class="stat-box">
            <MudIcon Icon="@Icons.TwoTone.BookOnline" Color="Color.Secondary" Size="Size.Large" />

            <h2 class="count mt-3" data-target="400000">0</h2>
            <p>عدد التذاكر المباعة</p>
        </div>
    </div>

    <a href="#" class="contact-btn">تواصل معنا</a>
</section>




@code {
    private bool arrows = true;
    private bool bullets = false;
    private bool enableSwipeGesture = true;
    private bool autocycle = true;
    private Transition transition = Transition.Slide;
    private List<MatchDto> ActiveMatches = new();
    private bool IsCarouselShown { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadActiveMatchesAsync();
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("startCounting");
        }
    }
    private async Task LoadActiveMatchesAsync()
    {
        try
        {
            var response = await MatchService.GetActiveMatches(false);
            _ = response.Match(
                succ =>
                {
                    ActiveMatches = succ.Data?.ToList() ?? [];
                    if (ActiveMatches.Count > 4)
                    {
                        IsCarouselShown = true;
                    }

                    if (!succ.IsSuccess)
                    {
                        Snackbar.Show(Resource.Match_Load_Fail, Severity.Error);
                    }
                    Snackbar.Show(succ.Title!, succ.IsSuccess ? Severity.Info : Severity.Error);
                    succ.ErrorList?.ToList().ForEach(x => Snackbar.Show($"{x.Title}: {x.Message}", Severity.Error));
                    return new Unit();
                },
                fail =>
                {
                    ActiveMatches ??= [];
                    Snackbar.Show(Resource.Error_Occurred, Severity.Error);
                    return new Unit();
                }
            );
        }
        catch (Exception ex)
        {
            Snackbar.Show(Resource.Error_Occurred, Severity.Error);
            Console.WriteLine($"Error during LoadActiveMatchesAsync: {ex.Message}");
        }
    }

    private void NavigateToDetails(Guid matchId)
    {
        NavigationManager.NavigateTo($"/match-details/{matchId}");
    }
}
