<LanguageTrackProvider OnInitializeEvent="provider => provider.RegisterComponent(this)" />

<MudIconButton Icon=@(_processing ? LoaderIcon : Icon) OnClick="ProcessSomething" Disabled=@(_processing || Disabled) Variant=@Variant Color=@(_isDefaultColor ? Color : (FinishedColor ?? Color)) />

@code {
    private bool _processing = false;
    private bool _isDefaultColor = false;
    [Parameter]
    public string? Icon { get; set; }
    [Parameter]
    public string LoaderIcon { get; set; } = @"<svg xmlns=""http://www.w3.org/2000/svg"" width=""1em"" height=""1em"" viewBox=""0 0 24 24""><g stroke=""currentColor""><circle cx=""12"" cy=""12"" r=""9.5"" fill=""none"" stroke-linecap=""round"" stroke-width=""3""><animate attributeName=""stroke-dasharray"" calcMode=""spline"" dur=""1.5s"" keySplines=""0.42,0,0.58,1;0.42,0,0.58,1;0.42,0,0.58,1"" keyTimes=""0;0.475;0.95;1"" repeatCount=""indefinite"" values=""0 150;42 150;42 150;42 150""/><animate attributeName=""stroke-dashoffset"" calcMode=""spline"" dur=""1.5s"" keySplines=""0.42,0,0.58,1;0.42,0,0.58,1;0.42,0,0.58,1"" keyTimes=""0;0.475;0.95;1"" repeatCount=""indefinite"" values=""0;-16;-59;-59""/></circle><animateTransform attributeName=""transform"" dur=""2s"" repeatCount=""indefinite"" type=""rotate"" values=""0 12 12;360 12 12""/></g></svg>";
    [Parameter]
    public EventCallback OnClick { get; set; }
    [Parameter]
    public bool Disabled { get; set; }
    [Parameter]
    public Color Color { get; set; } = Color.Primary;
    [Parameter]
    public Color? FinishedColor { get; set; }
    [Parameter]
    public Variant Variant { get; set; } = Variant.Text;


    async Task ProcessSomething()
    {
        _processing = true;
        if (OnClick.HasDelegate) await OnClick.InvokeAsync();
        _processing = false;
        _isDefaultColor = true;
        await Task.Delay(1000);
        _isDefaultColor = false;
    }
}
