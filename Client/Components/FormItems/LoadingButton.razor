<LanguageTrackProvider OnInitializeEvent="provider => provider.RegisterComponent(this)" />

<MudButton Href=@Href StartIcon=@StartIcon OnClick="ProcessSomething" ButtonType="ButtonType.Submit" Disabled=@(_processing || Disabled) Variant=@Variant Color=@(_isDefaultColor ? Color : (FinishedColor ?? Color)) Class=@Class FullWidth=FullWidth>
    @if (_processing)
    {
        if (LoadingContent == null)
        {
            <MudProgressCircular Size="MudBlazor.Size.Small" Indeterminate="true" Class="mx-2 ms-n1" />

            <span>&nbsp;&nbsp;&nbsp;</span>

            @ChildContent
        }
        else
        {
            @LoadingContent
        }
    }
    else
    {
        @ChildContent
    }
</MudButton>

@code {
    private bool _processing = false;
    private bool _isDefaultColor = false;
    [Parameter]
    public RenderFragment? ChildContent { get; set; }
    [Parameter]
    public RenderFragment? LoadingContent { get; set; }
    [Parameter]
    public EventCallback OnClick { get; set; }
    [Parameter]
    public bool Disabled { get; set; }
    [Parameter]
    public bool FullWidth { get; set; }
    [Parameter]
    public string? Href { get; set; }
    [Parameter]
    public string StartIcon { get; set; } = string.Empty;
    [Parameter]
    public Color Color { get; set; } = Color.Primary;
    [Parameter]
    public Color? FinishedColor { get; set; }
    [Parameter]
    public Variant Variant { get; set; }
    [Parameter]
    public string Class { get; set; } = string.Empty;


    async Task ProcessSomething()
    {
        _processing = true;
        if (OnClick.HasDelegate) await OnClick.InvokeAsync();
        _processing = false;
        _isDefaultColor = true;
        await Task.Delay(1000);
        _isDefaultColor = false;
    }
}
