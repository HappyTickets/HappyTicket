
<div class="container">
    @for (int i = 0; i < Images.Count; i++)
    {
        int index = i;
        <div @onmouseover=@(_ => ActivateImage(index)) @onmouseout="DeActivateImage"
             @onclick=@(_ => {DefaultActive = (DefaultActive == index + 1) ? -1 : (index + 1);})
             class=@(activeImage == index ? "box active" : "box")
             style=@($"min-height:{MinHeight}; background-image: url({Images[index].Uri});")>
            @if (activeImage == index)
            {
                <h2 class="display: none;">@Images[index].Text</h2>
            }
        </div>
    }
</div>

@code {
    [Parameter]
    public List<(string Uri, string Text)> Images { get; set; }
    [Parameter]
    public string MinHeight { get; set; } = "400px";
    [Parameter]
    public int DefaultActive { get; set; }

    int activeImage;

    void ActivateImage(int index)
    {
        activeImage = index;
    }
    void DeActivateImage() => ActivateImage(DefaultActive - 1);
}
<style>
    .container {
        max-width: 100%;
        height: 100%;
        width: 100%;
        display: flex;
        align-items: center;
        color: transparent;
        padding: 0px;
    }

    .box {
        flex: 0.5;
        height: 80%;
        background-repeat: no-repeat;
        background-size: cover;
        background-position: center;
        margin: 10px;
        border-radius: 15px;
        cursor: pointer;
        transition: all 0.7s ease-in-out;
        position: relative;
    }

    h2 {
        position: absolute;
        left: 20px;
        bottom: 20px;
        opacity: 0;
        transition: all 0.5s ease-in-out 0.2s;
        white-space: nowrap;
    }

    .active {
        flex: 5;
        color: white;
    }

    .active > h2 {
        opacity: 1;
        display: block;
    }
</style>